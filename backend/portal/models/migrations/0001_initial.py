# Generated by Django 4.2.4 on 2023-08-25 11:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import portal.models.field
import uuid


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="ClientCompany",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("company_name", models.TextField(blank=True, null=True)),
                ("email_domain", models.TextField(blank=True, null=True)),
                ("is_active", models.BooleanField(default=True)),
                ("number_of_seats", models.IntegerField(default=0)),
            ],
            options={
                "db_table": "auth__client_company",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="MemberDetails",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("cover_my_meds_key", portal.models.field.AES256EncryptedField()),
                ("last_name", portal.models.field.AES256EncryptedField()),
                ("dob", portal.models.field.AES256EncryptedField()),
                ("member_id", portal.models.field.AES256EncryptedField()),
                ("ma_email", portal.models.field.AES256EncryptedField()),
            ],
            options={
                "db_table": "requirements__member_details",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PriorAuthRequirement",
            fields=[
                (
                    "url_slug",
                    models.TextField(db_index=True, primary_key=True, serialize=False),
                ),
                ("description", models.TextField(blank=True, db_index=True, null=True)),
                (
                    "insurance_provider",
                    models.TextField(blank=True, db_index=True, null=True),
                ),
                (
                    "insurance_plan_type",
                    models.TextField(blank=True, db_index=True, null=True),
                ),
                (
                    "insurance_coverage_state",
                    models.TextField(blank=True, db_index=True, null=True),
                ),
                ("medication", models.TextField(blank=True, db_index=True, null=True)),
                ("requirements_checklist", models.JSONField(null=True)),
                (
                    "date_created",
                    models.DateTimeField(auto_now_add=True, db_index=True),
                ),
                ("date_modified", models.DateTimeField(auto_now=True, db_index=True)),
            ],
            options={
                "db_table": "requirements__prior_auth_requirement",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="UXFeedback",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("is_helpful", models.BooleanField(blank=True, null=True)),
                ("comment", models.TextField(blank=True, null=True)),
                ("submission_date", models.DateTimeField(auto_now_add=True)),
                ("release_version", models.TextField(blank=True, null=True)),
                ("email", models.TextField(blank=True, null=True)),
                (
                    "prior_auth_requirements",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="portal.priorauthrequirement",
                    ),
                ),
            ],
            options={
                "db_table": "user_experience__ux_feedback",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RequestNewPriorAuthRequirements",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("medication", models.TextField(blank=True, null=True)),
                ("insurance_provider", models.TextField(blank=True, null=True)),
                ("insurance_coverage_state", models.TextField(blank=True, null=True)),
                ("submission_date", models.DateTimeField(auto_now_add=True)),
                ("release_version", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "member_details",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="portal.memberdetails",
                    ),
                ),
            ],
            options={
                "db_table": "requirements__request_new_prior_auth_requirements",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="PriorAuthDenial",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("medication", models.TextField(blank=True, null=True)),
                ("submission_date", models.DateTimeField(auto_now_add=True)),
                ("release_version", models.TextField(blank=True, null=True)),
                ("notes", models.TextField(blank=True, null=True)),
                (
                    "member_details",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="portal.memberdetails",
                    ),
                ),
            ],
            options={
                "db_table": "pa_denial__prior_auth_denial",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                ("first_name", models.TextField()),
                ("last_name", models.TextField()),
                (
                    "email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        null=True,
                        unique=True,
                        verbose_name="Email address",
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(default=False, verbose_name="User status"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=False, verbose_name="Active"),
                ),
                (
                    "is_email_verified",
                    models.BooleanField(default=False, verbose_name="Verified"),
                ),
                (
                    "is_2fa_verified",
                    models.BooleanField(
                        default=False, verbose_name="Google Auth Verified"
                    ),
                ),
                ("secret_code", models.CharField(blank=True, max_length=32)),
                ("auth_url", models.CharField(blank=True, max_length=255)),
                ("mobapp_id", models.UUIDField(default=uuid.uuid1, unique=True)),
                ("submission_date", models.DateTimeField()),
                (
                    "client_company",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="user_client_company",
                        to="portal.clientcompany",
                    ),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "db_table": "auth__user",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="BlackListedAccessToken",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("access_token", models.CharField(max_length=500)),
                ("timestamp", models.DateTimeField(auto_now=True)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="access_token_user",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "auth__black_listed_access_token",
                "unique_together": {("access_token", "user")},
            },
        ),
    ]
