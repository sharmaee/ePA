# Generated by Django 4.2.5 on 2023-10-06 14:50

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    dependencies = [
        ("portal", "0010_alter_serviceemaillogaction_email_type"),
    ]

    operations = [
        migrations.CreateModel(
            name="InsuranceCoverageCriteria",
            fields=[
                (
                    "url_slug",
                    models.CharField(
                        db_index=True, max_length=32, primary_key=True, serialize=False
                    ),
                ),
                ("created_on", models.DateTimeField(auto_now_add=True)),
                ("updated_on", models.DateTimeField(auto_now=True)),
            ],
            options={
                "db_table": "requirements__insurance_coverage_criteria",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InsurancePlanType",
            fields=[
                (
                    "insurance_plan_type",
                    models.TextField(db_index=True, primary_key=True, serialize=False),
                ),
            ],
            options={
                "db_table": "requirements__insurance_plan_type",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="InsuranceProvider",
            fields=[
                (
                    "insurance_provider",
                    models.TextField(db_index=True, primary_key=True, serialize=False),
                ),
            ],
            options={
                "db_table": "requirements__insurance_provider",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Medication",
            fields=[
                (
                    "medication",
                    models.TextField(db_index=True, primary_key=True, serialize=False),
                ),
                ("description", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "requirements__medication",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Requirement",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "insurance_coverage_criteria",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requirements",
                        to="portal.insurancecoveragecriteria",
                    ),
                ),
            ],
            options={
                "db_table": "requirements__requirement",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RequirementOptionTemplate",
            fields=[
                (
                    "option_rule_name",
                    models.TextField(db_index=True, primary_key=True, serialize=False),
                ),
                (
                    "node_type",
                    models.TextField(
                        choices=[("radio", "Radio"), ("checkbox", "Checkbox")],
                        default="radio",
                    ),
                ),
                ("label", models.TextField(blank=True, null=True)),
            ],
            options={
                "db_table": "requirements__requirement_option_template",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="RequirementTemplate",
            fields=[
                (
                    "requirement_rule_name",
                    models.TextField(db_index=True, primary_key=True, serialize=False),
                ),
                (
                    "node_type",
                    models.TextField(
                        choices=[("fieldset", "Fieldset")], default="fieldset"
                    ),
                ),
                ("label", models.TextField(blank=True, null=True)),
                (
                    "medication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requirement_templates",
                        to="portal.medication",
                    ),
                ),
            ],
            options={
                "db_table": "requirements__requirement_template",
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="State",
            fields=[
                (
                    "state",
                    models.TextField(db_index=True, primary_key=True, serialize=False),
                ),
            ],
            options={
                "db_table": "requirements__state",
                "abstract": False,
            },
        ),
        migrations.AlterModelOptions(
            name="uxfeedback",
            options={
                "ordering": ["-created_on"],
                "verbose_name": "UX Feedback",
                "verbose_name_plural": "UX Feedback",
            },
        ),
        migrations.CreateModel(
            name="SmartEngineItem",
            fields=[
                (
                    "smart_engine_item_id",
                    models.TextField(db_index=True, primary_key=True, serialize=False),
                ),
                ("label", models.TextField(blank=True, null=True)),
                ("validation", models.TextField(blank=True, null=True)),
                (
                    "medication",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="smart_engine_items",
                        to="portal.medication",
                    ),
                ),
                (
                    "requirement_option_template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="smart_engine_items",
                        to="portal.requirementoptiontemplate",
                    ),
                ),
                (
                    "requirement_template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="smart_engine_items",
                        to="portal.requirementtemplate",
                    ),
                ),
            ],
            options={
                "db_table": "requirements__smart_engine_item",
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="requirementoptiontemplate",
            name="requirement_template",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="requirement_option_templates",
                to="portal.requirementtemplate",
            ),
        ),
        migrations.CreateModel(
            name="RequirementOption",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "option_rule_set",
                    models.ManyToManyField(
                        blank=True,
                        db_table="requirements__requirementoptiontemplate_to_requirement",
                        related_name="+",
                        to="portal.requirementoptiontemplate",
                    ),
                ),
                (
                    "requirement",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requirement_options",
                        to="portal.requirement",
                    ),
                ),
                (
                    "requirement_option_template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="requirement_options",
                        to="portal.requirementoptiontemplate",
                    ),
                ),
            ],
            options={
                "db_table": "requirements__requirement_option",
                "abstract": False,
            },
        ),
        migrations.AddField(
            model_name="requirement",
            name="requirement_rule_set",
            field=models.ManyToManyField(
                blank=True,
                db_table="requirements__requirementtemplate_to_requirement",
                related_name="+",
                to="portal.requirementtemplate",
            ),
        ),
        migrations.AddField(
            model_name="requirement",
            name="requirement_template",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="requirements",
                to="portal.requirementtemplate",
            ),
        ),
        migrations.AddField(
            model_name="insurancecoveragecriteria",
            name="insurance_plan_types",
            field=models.ManyToManyField(
                blank=True,
                db_table="requirements__insuranceplantype_to_insurancecoveragecriteria",
                related_name="insurance_coverage_criteria",
                to="portal.insuranceplantype",
            ),
        ),
        migrations.AddField(
            model_name="insurancecoveragecriteria",
            name="insurance_provider",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="insurance_coverage_criteria",
                to="portal.insuranceprovider",
            ),
        ),
        migrations.AddField(
            model_name="insurancecoveragecriteria",
            name="medication",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="insurance_coverage_criteria",
                to="portal.medication",
            ),
        ),
        migrations.AddField(
            model_name="insurancecoveragecriteria",
            name="states",
            field=models.ManyToManyField(
                blank=True,
                db_table="requirements__state_to_insurancecoveragecriteria",
                related_name="insurance_coverage_criteria",
                to="portal.state",
            ),
        ),
    ]
