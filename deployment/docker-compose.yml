version: '3.8'

services:
  web:
    restart: always
    build:
      context: ..
      dockerfile: ./deployment/Dockerfile
    command: >
      sh -c "python manage.py migrate --noinput &&
             python manage.py collectstatic --no-input &&
             gunicorn portal.wsgi:application --bind 0.0.0.0:8000"
    volumes:
      - static_volume:/home/backend/web/static
      - media_volume:/home/backend/web/media
      - ../backend/:/home/backend/web
    expose:
      - 8000
    extra_hosts:
      - "db:${DB_SERVER_IP}"
    env_file:
      - ./.env
    depends_on:
      - redis
  nginx:
    restart: always
    build: 
      context: ..
      dockerfile: ./deployment/nginx/Dockerfile
    env_file:
      - ./.env
    volumes:
      - static_volume:/home/backend/web/static
      - media_volume:/home/backend/web/media
      - certbot_etc:/etc/letsencrypt
      - certbot_var:/var/lib/letsencrypt
      - dhparam:/etc/ssl/certs
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - celery
  certbot:
    image: certbot/certbot
    container_name: certbot
    env_file:
      - ./.env
    volumes:
      - certbot_etc:/etc/letsencrypt
      - certbot_var:/var/lib/letsencrypt
    depends_on:
      - nginx
    command: certonly --webroot --webroot-path=/var/lib/letsencrypt --email dev@lamarhealth.com --agree-tos --no-eff-email --force-renewal -d ${SUBDOMAIN}.dopriorauth.com -d www.${SUBDOMAIN}.dopriorauth.com
  redis:
    image: redis:alpine
    restart: always
  celery:
    restart: always
    build:
      context: ..
      dockerfile: ./deployment/Dockerfile
    command: celery -A portal worker -l info
    env_file:
      - ./.env
    volumes:
      - ../backend/:/home/backend/web
    extra_hosts:
      - "db:${DB_SERVER_IP}"
    depends_on:
      - redis
      - web
  

volumes:
  static_volume:
  media_volume:
  certbot_etc:
  certbot_var:
  dhparam:
    driver: local
    driver_opts:
      type: none
      device: ./dhparam
      o: bind
